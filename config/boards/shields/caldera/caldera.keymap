#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ---------------------------------------------------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5   |     |  6  |  7  |  8  |  9  |  0  | BKSP |
// |  TAB |  Q  |  W  |  E  |  R  |  T   |     |  Y  |  U  |  I  |  O  |  P  |  \   |
// | CAPS |  A  |  S  |  D  |  F  |  G   |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
// | SHFT |  Z  |  X  |  C  |  V  |  B   |     |  N  |  M  |  ,  |  .  |  /  | APOS |
// | CTRL | ALT | GUI | SPC | LOW | SHFT |     | SPC | BKSP|LARW |DARW |UARW | RARW |
                        bindings = <
   &kp GRAVE  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5               &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &sl 2
   &kp TAB    &kp Q     &kp W     &kp E      &kp R      &kp T                &kp Y      &kp U     &kp I      &kp O     &kp P     &kp BSLH
   &kp CAPS   &kp A     &kp S     &kp D      &kp F      &kp G                &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp RET
   &kp LSHFT  &kp Z     &kp X     &kp C      &kp V      &kp B                &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp APOS
   &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &mo 1      &kp LSHFT            &kp SPACE  &kp BSPC  &kp LARW   &kp DARW  &kp UARW  &kp RARW
                        >;
                };
                lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |          |   "   |       |       |       |       | BTCLR |
// |       |       |       |   {   |   }   |       |          |   '   |   7   |   8   |   9   |   *   |       |
// |       |       |       |   (   |   )   |       |          |   !   |   4   |   5   |   6   |   +   |       |
// |       |       |       |   [   |   ]   |       |          |   ?   |   1   |   2   |   3   |   -   |       |
// |       |       |       |       |       |       |          |  SPC  |   0   |   .   |  ENT  |   /   |       |
                        bindings = <
   &trans    &trans      &trans      &trans         &trans         &trans                 &kp DQT     &trans    &trans   &trans   &trans  &bt BT_CLR
   &trans    &trans      &trans      &kp LBRC       &kp RBRC       &trans                 &kp SQT     &kp N7    &kp N8   &kp N9   &kp STAR   &trans
   &trans    &trans      &trans      &kp LPAR       &kp RPAR       &trans                 &kp EXCL    &kp N4    &kp N5   &kp N6   &kp PLUS   &trans
   &trans    &trans      &trans      &kp LBKT       &kp RBKT       &trans                 &kp QMARK   &kp N1    &kp N2   &kp N3   &kp MINUS  &trans
   &trans    &trans      &trans      &trans         &trans         &trans                 &trans      &trans    &trans   &trans   &kp FSLH   &trans
                        >;
                };
                lowest_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |          |       |       |       |       |       | BTCLR |
// |       |       |       |       |       |       |          |       |       |       |       |       |       |
// |       |       |       | LPAR  | RPAR  |       |          |       | LBKT  | RBKT  |       |       |       |
// |       |       |       |       |       |       |          |       |       |       |       |       |       |
                        bindings = <
   &trans    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4           &trans    &trans    &trans    &trans     &trans     &bt BT_CLR
   &trans    &trans         &trans         &trans         &trans         &trans                 &trans    &trans    &trans    &trans     &trans     &trans
   &trans    &trans         &trans         &kp LPAR       &kp RPAR       &trans                 &trans    &kp LBKT  &kp RBKT  &kp MINUS  &kp EQUAL  &trans
   &trans    &trans         &trans         &trans         &trans         &trans                 &trans    &trans    &trans    &trans     &trans     &trans
   &trans    &trans         &trans         &trans         &trans         &trans                 &trans    &trans    &trans    &trans     &trans     &trans
                        >;
                };
        };
};